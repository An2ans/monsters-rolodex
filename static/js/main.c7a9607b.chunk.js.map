{"version":3,"sources":["logo.svg","components/card.jsx","components/CardList.jsx","components/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Search","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCWAA,EARF,SAACC,GAAD,OACX,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BACtB,+BAAKL,EAAMI,QAAQE,KAAnB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCKaC,G,MAPE,SAACR,GAChB,OAAO,qBAAKC,UAAW,YAAhB,SACND,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCIRM,G,MARA,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACb,uBAAOC,KAAO,SACdb,UAAW,SACXW,YAAeA,EACfG,SAAaF,MCsCAG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAiBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAhBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDAUd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAC3BT,SAAUkB,S,oBAShB,WACE,MAAgCC,KAAKN,MAA9Bb,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEpG,OAAS,sBAAK9B,UAAY,MAAjB,UACP,mDACA,cAAC,EAAD,CACAW,YAAY,iBACZC,aAAee,KAAKf,eACpB,cAAC,EAAD,CAAUJ,SAAYoB,W,GAjCVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c7a9607b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from \"react\";\r\nimport \"./card.css\";\r\n\r\nconst Card = (props) => (\r\n  <div className=\"card-container\">\r\n  <img alt=\"monster\" src= {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n  <h2>{props.monster.name} </h2>\r\n  <p> {props.monster.email} </p>\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./card.jsx\";\r\n\r\nimport \"./card-list.css\";\r\n\r\nconst CardList = (props) => {\r\n  return <div className= \"card-list\">\r\n  {props.monsters.map(monster => (\r\n    <Card key={monster.id} monster={monster} />))}\r\n  </div>;\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./search.css\";\r\n\r\n\r\nconst Search = ({placeholder, handleChange}) => (\r\n  <input type = \"search\"\r\n  className =\"search\"\r\n  placeholder = {placeholder}\r\n  onChange = { handleChange}\r\n  />\r\n);\r\n\r\nexport default Search\r\n","import React, { Component} from \"react\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport CardList from './components/CardList.jsx';\r\nimport Search from './components/Search.jsx';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\"\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => response.json())\r\n      .then(users => this.setState({\r\n        monsters: users\r\n      }));\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchField: e.target.value });\r\n  };\r\n\r\n\r\n  render() {\r\n    const {monsters, searchField} = this.state;\r\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\r\n\r\n    return ( <div className = \"App\" >\r\n      <h1>Monsters Rolodex </h1>\r\n      <Search\r\n      placeholder=\"Search Monster\"\r\n      handleChange= {this.handleChange}/>\r\n      <CardList monsters = {filteredMonsters} />\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}